// server/index.js

const express = require("express");
const cors = require("cors");
const fetch = require("node-fetch");

require("dotenv").config();

const app = express();
const PORT = 5001;

app.use(cors({
  origin: 'http://localhost:3000'
}));
app.use(express.json());

const getAccessToken = async () => {
  const apiKey = process.env.IBM_API_KEY;
  console.log(apiKey);
  if (!apiKey) {
    console.error(" Missing IBM API key in .env");
    return null;
  }

  const body = new URLSearchParams({
    grant_type: "urn:ibm:params:oauth:grant-type:apikey",
    apikey: apiKey,
  });

  try {
    const response = await fetch("https://iam.cloud.ibm.com/identity/token", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body,
    });

    if (!response.ok) {
      const error = await response.text();
      console.error(" Token Fetch Error:", error);
      return null;
    }

    const data = await response.json();
    return data.access_token;
  } catch (err) {
    console.error(" Fetch Error:", err.message);
    return null;
  }
};

app.post("/api/summarise", async (req, res) => {
  const { customTopic } = req.body;
  if (!customTopic) return res.status(400).json({ error: "Missing customTopic" });
  console.log("trying to get access toke...");
  const accessToken = await getAccessToken();
  // console.log("Access tken is ", accessToken);
  if (!accessToken) return res.status(500).json({ error: "Access token fetch failed" });

  const url = "https://us-south.ml.cloud.ibm.com/ml/v1/text/generation?version=2023-05-29";

  const formattedInput = customTopic
  .split('\n')
  .map((line, idx) => `[09:${String(idx).padStart(2, '0')}] Speaker${idx + 1}: ${line}`)
  .join('\n');
  const inputTemplate = `Summarize this transcript into a structured daily standup report. For each speaker, extract:\n\n- Yesterday’s work\n- Today’s plan\n- Blockers\n\nInput: [09:00 - 09:02] Alice: Morning everyone. Quick update — yesterday I finalized the SSO integration and did a round of testing. Today I’m working on setting up session persistence and I’ll start writing documentation in the second half. No blockers at the moment.\n\n[09:02 - 09:04] Bob: I was deep in the error logging refactor yesterday — it’s halfway done. I’ll continue that today and then sync with QA to validate logs. Blocked on approval from security team to push to staging.\n\n[09:04 - 09:05] Charlie: Not much new — still working on the UI redesign. Yesterday was mostly Figma reviews and today I’ll start coding the new dashboard layout. No blockers.\n\n[09:05 - 09:07] Dana: Wrapped up the deployment pipeline cleanup yesterday. Today is all about writing the rollback scripts. Slight blocker: Jenkins node 4 is down, so I might need help from infra.\n\n[09:07 - 09:09] Emily: I was helping with onboarding yesterday, and also got the service registry changes merged. Planning to start work on health check endpoints today. All good on my side.\n\n[09:09 - 09:11] Faisal: Yesterday I debugged a memory leak in the analytics processor and applied a temporary fix. Need more time today to profile it properly. Also, planning to write a report for SRE. Blocked on access to production metrics dashboard.\n\n[09:11 - 09:13] Grace: I finished writing test cases for the export feature. Today I’ll be pairing with Bob on the logging refactor. Blocker: can’t run  — dependency conflict we need to fix.\n\n[09:13 - 09:14] Hari: I’ve been updating the localization strings across the app. Mostly done. Will review translations and flag missing keys today. No blockers.\n\n[09:14 - 09:16] Isha: Finished my OKR write-up yesterday, also closed the feedback loop with HR on the survey results. I’m starting the performance dashboard wireframes today. No blockers.\n\n[09:16 - 09:17] Jay: Took care of a lot of small Jira tickets yesterday, mostly related to accessibility. Today I’ll work on ARIA label support in forms. Nothing blocking me.\n\n[09:17 - 09:18] Kai: Reviewed the Terraform plan updates yesterday. Starting security policy cleanup today. Might need DevSecOps to weigh in on some rules. Will ping them if needed.\n\n[09:18 - 09:20] Lead: Great updates, thanks everyone. Reminder to submit your sprint review notes by EOD. Anyone with lingering blockers, stay back for a 5-min sync.\nOutput: Alice  \n\nYesterday’s Work: Finalized SSO integration; tested implementation  \nToday’s plan: Set up session persistence; begin documentation  \nBlockers: None  \n\nBob  \n\nYesterday’s Work: Refactored error logging (in progress)  \nToday’s plan:Continue refactor; sync with QA  \nBlockers: Awaiting staging approval from security team  \n\nCharlie  \n\nYesterday’s Work:  Figma reviews for UI redesign  \nToday’s plan: Start coding new dashboard layout  \nBlockers: None  \n\nDana  \n \nYesterday’s Work:  Cleaned up deployment pipeline  \nToday’s plan: Write rollback scripts  \nBlockers: Jenkins node 4 is down  \n\nEmily  \n\nYesterday’s Work:  Helped onboarding; merged service registry changes  \nToday’s plan:Start health check endpoints  \nBlockers: None  \n\nFaisal  \n\nYesterday’s Work:  Debugged memory leak in analytics processor; applied temporary fix  \nToday’s plan: Profile memory usage; write SRE report  \nBlockers: No access to production metrics dashboard  \n\nGrace  \n\nYesterday’s Work:  Wrote test cases for export feature  \nToday’s plan:Pair with Bob on logging refactor  \nBlockers:  failing due to dependency conflict  \n\nHari  \n\nYesterday’s Work:  Updated localization strings  \nToday’s plan:Review translations; flag missing keys  \nBlockers: None  \n\nIsha  \n\nYesterday’s Work:  Finished OKR write-up; closed HR feedback loop  \nToday’s plan:Begin performance dashboard wireframes  \nBlockers: None  \n\nJay  \n\nYesterday’s Work:  Closed accessibility-related Jira tickets  \nToday’s plan:Add ARIA label support in forms  \nBlockers: None  \n\nKai  \n\nYesterday’s Work:  Reviewed Terraform plan updates  \nTToday’s plan: Clean up security policies  \nBlockers: Awaiting DevSecOps input  \n\nInput: [10:00 - 10:02] Priya: Morning folks. Yesterday I refactored the Kafka consumer logic and added retries for failed events. Also reviewed the open PRs for the ETL pipeline. Today, I’ll work on deploying the retry logic and update the confluence doc. No blockers right now.\n\n[10:02 - 10:04] Amit: Wrapped up Terraform scripts for the GCP IAM roles yesterday. Today I’ll move to automating secret rotations via Vault. Slight blocker: need elevated permissions in the GCP console.\n\n[10:04 - 10:06] Rina: I completed the data validation framework and demoed it to the data science team yesterday. Today I’ll write tests and prep the data catalog. All good.\n\n[10:06 - 10:08] Sanjay: Closed 3 bugs in the GraphQL layer. Also started exploring rate limiting middleware. Today I’ll prototype that out. No blockers, but might need a review by EOD.\n\n[10:08 - 10:10] Nisha: I finalized sprint planning with QA and assigned tickets in JIRA. Worked on updating the roadmap doc. Today I’m focusing on stakeholder syncs. No blockers.\n\n[10:10 - 10:12] Vikram: Fixed race conditions in the Redis cache handler. Pushed a hotfix late last night. Today I’ll investigate the dropped session bug we saw on staging. Blocked by lack of access logs — requested from ops.\n\n[10:12 - 10:14] Lina: Finished writing unit tests for the feature flag service. Merging today and starting on incident documentation backlog. No blockers from my end.\n\n[10:14 - 10:16] Zoya: I worked on cleaning up the Jenkinsfile and added stage-level parallelism. Today I’ll test with large builds. Blocked by low disk space on Jenkins node 3.\n\n[10:16 - 10:17] Arun (PM): Quick reminder — please update the OKR status in the shared sheet by noon. Also, fill out your risk items in the new format. Ping me if you have issues.\nOutput: Priya  \n\nYesterday’s Work:Refactored Kafka consumer logic; added retries; reviewed ETL PRs  \nToday’s plan: Deploy retry logic; update Confluence documentation  \nBlockers: None  \n\nAmit  \n\nYesterday’s Work:Completed Terraform scripts for GCP IAM roles  \nToday’s plan:Automate secret rotation via Vault  \nBlockers: Needs elevated GCP permissions  \n\nRina  \nYesterday’s Work:Completed data validation framework; demoed to DS team  \nToday’s plan: Write tests; prepare data catalog  \nBlockers: None  \n\nSanjay  \n\nYesterday’s Work:Fixed bugs in GraphQL; explored rate limiting  \nToday’s plan: Prototype rate limiter  \nBlockers: None  \n\nNisha  \n\nYesterday’s Work: Finalized sprint planning; updated roadmap doc  \nToday’s plan: Focus on stakeholder syncs  \nBlockers: None  \n\nVikram  \n\nYesterday’s Work: Fixed race condition in Redis cache; pushed hotfix  \nToday’s plan: Investigate dropped session bug  \nBlockers: No access to logs from ops  \n\nLina  \nYesterday’s Work: Completed unit tests for feature flag service  \nToday’s plan: Merge tests; work on incident documentation  \nBlockers: None  \n\nZoya  \n\nYesterday’s Work: Cleaned up Jenkinsfile; added stage-level parallelism  \nToday’s plan: Test with large builds  \nBlockers: Low disk space on Jenkins node 3  \n\nInput: [11:00 - 11:02] Tanvi: Morning! Yesterday I finished porting the component library to our new design system. Fixed the tab alignment issue on the mobile layout. Today I’ll test across iOS devices and start accessibility QA. No blockers.\n\n[11:02 - 11:04] Leo: I added support for swipe gestures in the mobile app. Faced some animation jank but resolved it. Today I’ll polish the onboarding screens and run snapshot tests. Blocked by flaky test suites on Android CI.\n\n[11:04 - 11:06] Mehul: Worked on integrating Firebase push notifications yesterday. Mostly successful, but still seeing occasional duplicates. Will investigate today and sync with backend. No major blockers.\n\n[11:06 - 11:08] Kavya: Helped review PRs for the UI overhaul, and started refactoring the settings screen. Will finish that and test dark mode support today. No blockers right now.\n\n[11:08 - 11:10] Tara: Wrapped up localization for Spanish and German yesterday. Today I’ll start on RTL language support. Blocker: still waiting for Arabic strings from the translation team.\n\n[11:10 - 11:12] Neil: I updated the webpack config to reduce bundle size and added lazy loading for charts. Today I’ll do performance profiling. Blockers: None, but watching for regressions.\n\n\nOutput: Tanvi  \n\nYesterday’s Work: Ported component library to new design system; fixed mobile layout tabs  \nToday’s plan: iOS testing; start accessibility QA  \nBlockers: None  \n\nLeo  \n\nYesterday’s Work: Added swipe gesture support; fixed animation issues  \nToday’s plan: Polish onboarding; run snapshot tests  \nBlockers: Flaky Android CI tests  \n\nMehul  \n\nYesterday’s Work: Integrated Firebase push notifications  \nToday’s plan:Investigate duplicate notifications; sync with backend  \nBlockers: None  \n\nKavya  \n\nYesterday’s Work:  Reviewed PRs; started settings screen refactor  \nToday’s plan: Complete refactor; test dark mode  \nBlockers: None  \n\nTara  \n\nYesterday’s Work: Finalized Spanish & German localization  \nToday’s plan: Begin RTL language support  \nBlockers: Waiting on Arabic translations  \n\nNeil  \n\nYesterday’s Work: Reduced bundle size; added lazy loading  \nToday’s plan: Performance profiling  \nBlockers: None  \n\n\nInput: Pallavi L V\n0 minutes 9 seconds0:09\nPallavi L V 0 minutes 9 seconds\nYeah, we can sort.\nSK\n\nSreekanth Kadivendi\n0 minutes 9 seconds0:09\nSreekanth Kadivendi 0 minutes 9 seconds\nYeah. Yeah, yeah, yeah. You can start now.\nSreekanth Kadivendi 0 minutes 16 seconds\nThe mist.\nRG\n\nRiya Gupta\n0 minutes 35 seconds0:35\nRiya Gupta 0 minutes 35 seconds\nHello.\nRiya Gupta 0 minutes 38 seconds\nSorry I wasn'\''t.\nRiya Gupta 0 minutes 41 seconds\nOK, so let'\''s start. So today will be discussing that how the performance test is being done for multiple ML models. So as we know key there are three types of deployment which happens first is the batch, then the mini batch and then the online. So what like I have understood till now is key online majorly we do for like how the IT it clearly.\nRiya Gupta 1 minute 7 seconds\nVaries like how the scoring happens, like we obviously we we do the.\nRiya Gupta 1 minute 12 seconds\nWe'\''re testing for multiple models like multiple users at a time, right? So how that processing happens? It depends on that. So like that, we'\''ll go first. So first is like WML deployment to V4.\nRiya Gupta 1 minute 28 seconds\nYeah. So it has, like I discussed that that batch mini batch in online, what batch does is it process large data at once, minibatch process, small groups of data and online one data at a time immediately as it arrives. So we'\''ll try to go through key if I will take online deployment as an example and try to understand that how exactly all the procedure happens. So what does it mean is key?\nRiya Gupta 1 minute 55 seconds\nWhat we are exactly doing is key for our ML model which is with the help of JM metre multiple JM metre clients. We are trying to hit the ML model and trying to.\nBS\nBASKER SHANMUGAM\n1 hour 9 minutes 56 seconds1:09:56\nBASKER SHANMUGAM 1 hour 9 minutes 56 seconds\nYep.\nBASKER SHANMUGAM 1 hour 9 minutes 59 seconds\nYeah.\nPV\nPallavi L V\n1 hour 10 minutes 1 second1:10:01\nPallavi L V 1 hour 10 minutes 1 second\nWhen, in which cases we have to increase that T-shirt size and in which case in what case we have to increase that copies like number of bots?\nBS\nBASKER SHANMUGAM\n1 hour 10 minutes 11 seconds1:10:11\nBASKER SHANMUGAM 1 hour 10 minutes 11 seconds\nBut typically by default we need to.\nBASKER SHANMUGAM 1 hour 10 minutes 15 seconds\nMove based on the T-shirt size, right?\nBASKER SHANMUGAM 1 hour 10 minutes 18 seconds\nBut it may so happen that even with the configured T-shirt size, we are not able to handle the load right? So the T-shirt size is only for for it'\''s a tshirt size right?\nPV\nPallavi L V\n1 hour 10 minutes 31 seconds1:10:31\nPallavi L V 1 hour 10 minutes 31 seconds\nOK.\nBS\nBASKER SHANMUGAM\n1 hour 10 minutes 36 seconds1:10:36\nBASKER SHANMUGAM 1 hour 10 minutes 36 seconds\nThe tshirt size does not fit all the use cases right, it'\''s it'\''s some typical use cases, but if there is a custom use case right? So if there'\''s a custom use case which cannot be fit on one of these T-shirt sizes.\nBASKER SHANMUGAM 1 hour 10 minutes 54 seconds\nIn those cases, we need to go manually bump up the copies of the NY part.\nBASKER SHANMUGAM 1 hour 11 minutes 1 second\nBump it up by specifying the parameter in the CR.\nPV\nPallavi L V\n1 hour 11 minutes 5 seconds1:11:05\nPallavi L V 1 hour 11 minutes 5 seconds\nOK, OK. Mm hmm.\nBS\nBASKER SHANMUGAM\n1 hour 11 minutes 5 seconds1:11:05\nBASKER SHANMUGAM 1 hour 11 minutes 5 seconds\nOK. And then we will know we will know about it by looking at the metrics, right? So we we start by scaling it to a particular tshirt size, then we run our test and then we see that if our invite part is actually maxing up right. In that case the for the large case we have only say 2 copies, right. And it'\''s not able to handle with those two copies.\nBASKER SHANMUGAM 1 hour 11 minutes 31 seconds\nThen we bump it up to four or eight or whatever we want to make sure that that is not the bottom.\nPV\nPallavi L V\n1 hour 11 minutes 37 seconds1:11:37\nPallavi L V 1 hour 11 minutes 37 seconds\nOK, OK. OK. First we'\''ll increase the tshirt sizes itself, not the bots, right?\nBS\nBASKER SHANMUGAM\n1 hour 11 minutes 45 seconds1:11:45\nBASKER SHANMUGAM 1 hour 11 minutes 45 seconds\nYeah, yeah, yeah, the, the, the what we need to do is we need to 1st go with the standard tshirt size, right? And see if that helps. And then second, we need to go with the HPA enable horizontal scaling right and see if that is able to handle the load, right.\nPV\nPallavi L V\n1 hour 11 minutes 51 seconds1:11:51\nPallavi L V 1 hour 11 minutes 51 seconds\nI hope.\nPallavi L V 1 hour 11 minutes 58 seconds\nYeah, yeah.\nPallavi L V 1 hour 12 minutes 2 seconds\nOK.\nBS\nBASKER SHANMUGAM\n1 hour 12 minutes 3 seconds1:12:03\nBASKER SHANMUGAM 1 hour 12 minutes 3 seconds\nAnd only if standard T-shirt size and HP doesn'\''t tell. In that case we need to disable HPA and then use the custom sizing. OK, because custom sizing and HPA don'\''t together, only the HP takes priority over custom size.\nPV\nPallavi L V\n1 hour 12 minutes 16 seconds1:12:16\nPallavi L V 1 hour 12 minutes 16 seconds\nNo.\nPallavi L V 1 hour 12 minutes 25 seconds\nYeah. Yeah, OK. OK.\nPallavi L V 1 hour 12 minutes 30 seconds\nOK, Bhaskar and OK. In this case like in current Ria'\''s code, right Python code. So there we have online only for online testing it is proper but for scalability I think we need to think a bit like we have to keep on increase this invoice ports are different service based on the response time as well right?\nPallavi L V 1 hour 12 minutes 56 seconds\nSo.\nBS\nBASKER SHANMUGAM\n1 hour 12 minutes 57 seconds1:12:57\nBASKER SHANMUGAM 1 hour 12 minutes 57 seconds\nOK, there is some additional manual trial and error we keep doing right.\nPV\nPallavi L V\n1 hour 12 minutes 58 seconds1:12:58\nPallavi L V 1 hour 12 minutes 58 seconds\nIt'\''s.\nPallavi L V 1 hour 13 minutes 3 seconds\nCorrect, correct.\nBS\nBASKER SHANMUGAM\n1 hour 13 minutes 4 seconds1:13:04\nBASKER SHANMUGAM 1 hour 13 minutes 4 seconds\nYes, yes. Yeah, yeah, I understand the problem we faced, right? Yeah.\nBASKER SHANMUGAM 1 hour 13 minutes 12 seconds\nYeah, it'\''ll be good to for Ria to handle that case also.\nBASKER SHANMUGAM 1 hour 13 minutes 18 seconds\nTo basically look at the.\nBASKER SHANMUGAM 1 hour 13 minutes 21 seconds\nWhat it calls CPU and memory plus section of the NY part and the X part right and then.\nBASKER SHANMUGAM 1 hour 13 minutes 30 seconds\nThen automatically scale up the.\nBASKER SHANMUGAM 1 hour 13 minutes 33 seconds\nThe T-shirt size right and then repeat the test correct.\nPV\nPallavi L V\n1 hour 13 minutes 38 seconds1:13:38\nPallavi L V 1 hour 13 minutes 38 seconds\nYeah.\nBS\nBASKER SHANMUGAM\n1 hour 13 minutes 39 seconds1:13:39\nBASKER SHANMUGAM 1 hour 13 minutes 39 seconds\nYeah.\nBASKER SHANMUGAM 1 hour 13 minutes 40 seconds\nBut.\nBASKER SHANMUGAM 1 hour 13 minutes 43 seconds\nAt this point, given that we have only about 1 less than a week or so, the right, we can put that announcement on hold and try to do the scalability test manually, right?\nPV\nPallavi L V\n1 hour 13 minutes 47 seconds1:13:47\nPallavi L V 1 hour 13 minutes 47 seconds\nRight.\nPallavi L V 1 hour 13 minutes 57 seconds\nOK. Yeah.\nBS\nBASKER SHANMUGAM\n1 hour 13 minutes 58 seconds1:13:58\nBASKER SHANMUGAM 1 hour 13 minutes 58 seconds\nSo, so. So what we do is we use the real script to do 1 iteration of finding the optimal number per configuration, right. And then if we find that configuration'\''s not good, then we manually change the configuration, either by bumping up the tshirt size or going to the enabling HPA or going with the.\nPV\nPallavi L V\n1 hour 14 minutes 7 seconds1:14:07\nPallavi L V 1 hour 14 minutes 7 seconds\nMm hmm.\nBS\nBASKER SHANMUGAM\n1 hour 14 minutes 19 seconds1:14:19\nBASKER SHANMUGAM 1 hour 14 minutes 19 seconds\nCustom sizing and then use the script to find the the optimal user.\nPV\nPallavi L V\n1 hour 14 minutes 26 seconds1:14:26\nPallavi L V 1 hour 14 minutes 26 seconds\nOK, OK. Yeah, got it. OK.\nPallavi L V 1 hour 14 minutes 34 seconds\nYeah, that'\''s cool.\nBS\nBASKER SHANMUGAM\n1 hour 14 minutes 34 seconds1:14:34\nBASKER SHANMUGAM 1 hour 14 minutes 34 seconds\nAnything else?\nSK\nSreekanth Kadivendi\n1 hour 14 minutes 37 seconds1:14:37\nSreekanth Kadivendi 1 hour 14 minutes 37 seconds\nYeah. Anyone have any questions please?\nSreekanth Kadivendi 1 hour 14 minutes 45 seconds\nYeah, if no one have any questions, then I'\''ll try to wind up this call. I thank you Bhaskar for clarifying that doves and guidance for us and thank you Ria for sharing the session.\nSreekanth Kadivendi 1 hour 14 minutes 58 seconds\nHope you will get more session from you and as well.\nSreekanth Kadivendi 1 hour 15 minutes 3 seconds\nIf anyone want to say anything.\nSreekanth Kadivendi 1 hour 15 minutes 8 seconds\nIf nothing, then I'\''ll try to wind up this call.\nBS\nBASKER SHANMUGAM\n1 hour 15 minutes 12 seconds1:15:12\nBASKER SHANMUGAM 1 hour 15 minutes 12 seconds\nThank you. Bye.\nSK\nSreekanth Kadivendi\n1 hour 15 minutes 12 seconds1:15:12\nSreekanth Kadivendi 1 hour 15 minutes 12 seconds\nYeah. Thank you, Tim. Have a nice day. Bye.\nET\nElavarasi Thangaraj\n1 hour 15 minutes 14 seconds1:15:14\nElavarasi Thangaraj 1 hour 15 minutes 14 seconds\nThank you.\nPV\nPallavi L V\n1 hour 15 minutes 15 seconds1:15:15\nPallavi L V 1 hour 15 minutes 15 seconds\nThank you and bye.\nOutput: Pallavi L V\n\nYesterday’s Work:  No specific work mentioned\nToday’s plan:Discussing performance testing for multiple ML models, focusing on online deployment\nBlockers: None mentioned\n\nBasker Shanmugam\n\nYesterday’s Work:  No specific work mentioned\nToday’s plan: Explaining the process of performance testing for ML models, discussing T-shirt sizes and HPA\nBlockers: None mentioned\n\nRiya Gupta\n\nYesterday’s Work:  No specific work mentioned\nToday’s plan:Initiating discussion on performance testing for multiple ML models\nBlockers: None mentioned\n\nSreekanth Kadivendi\n\nYesterday’s Work:  No specific work mentioned\nToday’s plan: Facilitating the discussion on performance testing for ML models\nBlockers: None mentioned\n\nElavarasi Thangaraj\n\nYesterday’s Work: No specific work mentioned\nToday’s plan: Participating in the discussion on performance testing for ML models\nBlockers: None mentioned\n\nInput: [00:00] Alice: Okay everyone, let’s get started. Just a reminder, this is our sprint planning and status sync. Let’s aim to keep it under 30 minutes.\n[00:07] Bob: Sounds good. I’ll go first — I wrapped up the authentication refactor yesterday. It’s merged to dev. But I noticed tests are flaky on CI.\n[00:16] Clara: Oh, that'\''s probably due to the new cache layer. I’m still working on the Redis config — should be done by EOD.\n[00:22] Dave: I’m blocked on that, actually. My endpoint relies on the caching logic. Without it, my load test scripts are failing.\n[00:30] Alice: Okay noted. Clara, please prioritize finishing that today. Dave, you can stub it temporarily.\n[00:38] Emily: Quick update from me — the user dashboard redesign is complete. I handed it over to QA. No major issues so far.\n[00:45] Frank: I started integrating the Stripe payment module, but their sandbox is behaving weirdly — getting intermittent 500s.\n[00:53] Grace: That’s weird. I did some work on billing last week and didn’t run into that. What endpoint are you hitting?\n[01:00] Frank: /v1/checkout/sessions — I think it might be region-specific? I’m using the test key for EU.\n[01:06] Grace: Ah okay, I used the US endpoint. I’ll check with support and loop back to you.\n[01:12] Hannah: Quick one — I finished the documentation updates for the API. I’ll push the changes to Confluence later today.\n[01:19] Ian: I noticed the docs are missing the rate limit policies though. I can draft something for that.\n[01:25] Hannah: Awesome, thanks Ian.\n[01:27] Jack: From DevOps — infra upgrade is halfway through. Most services are now running on Kubernetes. But we need to refactor the deployment scripts for the older microservices.\n[01:37] Alice: That’s good progress. Let’s aim to complete that by Friday.\n[01:41] Bob: Alice, one thing — the build pipeline is still using the old Docker images. Can we add that as a tech debt ticket?\n[01:47] Alice: Yep, I’ll add it to the backlog.\n[01:50] Dave: I forgot to mention — the analytics dashboard is also ready. But the charts look broken on Safari.\n[01:56] Clara: Oh, that’s a known issue. It’s due to the charting lib’s WebKit bug. I’ll file a patch PR.\n[02:03] Emily: Quick win — I added dark mode support to the header component yesterday. Just a toggle in user settings for now.\n[02:10] Frank: That’s sweet. Does it persist across sessions?\n[02:13] Emily: Yup, using localStorage for now.\n[02:16] Grace: Speaking of settings — I think the preferences endpoint doesn’t support PATCH. Should we fix that?\n[02:21] Ian: Yeah, I can do that. It’s a one-line change in the controller.\n[02:25] Jack: Also — who’s handling the AWS IAM cleanup? There are way too many unused roles.\n[02:30] Hannah: That’s on my list. I’ll get to it this week.\n[02:34] Bob: Heads up — the test coverage dropped to 72% after the last few merges. We should probably enforce minimums again.\n[02:40] Clara: Agreed. I’ll add coverage gates to the pipeline.\n[02:44] Alice: Alright, let’s summarize:\n- :white_check_mark: Done: Auth refactor, dashboard redesign, API docs, dark mode\n- :soon: To Do: Redis caching, IAM cleanup, PATCH support, infra migration\n- :no_entry_sign: Blockers: CI flakiness, Stripe test env, chart bug on Safari\n[02:58] Alice: Let’s regroup next Monday. If you hit blockers before that, raise them in Slack. Thanks everyone!\nOutput:  Alice\nYesterday’s Work: N/A (facilitator)\n\nToday’s Plan: Add tech debt ticket for Docker images\n\nBlockers: None\n\nBob\nYesterday’s Work: Completed and merged authentication refactor to dev\n\nToday’s Plan: N/A\n\nBlockers: CI tests are flaky\n\nNotes: Mentioned test coverage dropped to 72%, suggested enforcing coverage gates\n\nClara\nYesterday’s Work: Working on Redis config\n\nToday’s Plan: Finish Redis config; file a patch PR for Safari chart bug; add test coverage gates\n\nBlockers: None\n\nNotes: Redis changes likely causing CI flakiness\n\n Dave\nYesterday’s Work: Load test scripts for caching-dependent endpoint; analytics dashboard\n\nToday’s Plan: Stub caching temporarily\n\nBlockers: Blocked by incomplete Redis config; charts broken on Safari\n\n Emily\nYesterday’s Work: Completed user dashboard redesign and handed to QA; added dark mode to header\n\nToday’s Plan: N/A\n\nBlockers: None\n\n Frank\nYesterday’s Work: Started Stripe payment integration\n\nToday’s Plan: Continue investigating Stripe 500 errors\n\nBlockers: Stripe sandbox returning intermittent 500 errors\n\n Grace\nYesterday’s Work: Previous work on billing integration\n\nToday’s Plan: Check Stripe region-specific issue with support\n\nBlockers: None\n\n Hannah\nYesterday’s Work: Finished API documentation updates\n\nToday’s Plan: Push docs to Confluence; handle AWS IAM cleanup\n\nBlockers: None\n\n Ian\nYesterday’s Work: N/A\n\nToday’s Plan: Draft rate limit policy docs; add PATCH support to preferences endpoint\n\nBlockers: None\n\n Jack\nYesterday’s Work: Infra migration to Kubernetes (halfway done)\n\nToday’s Plan: Refactor deployment scripts; continue infra upgrade\n\nBlockers: None\n\n\n\nInput: Pallavi L V started transcription\nSV\n\nSHASHANK VAGARALI\n0 minutes 16 seconds0:16\nSHASHANK VAGARALI 0 minutes 16 seconds\nOK. Can you guys hear me now?\nPV\n\nPallavi L V\n0 minutes 21 seconds0:21\nPallavi L V 0 minutes 21 seconds\nYeah, shisha.\nSV\n\nSHASHANK VAGARALI\n0 minutes 22 seconds0:22\nSHASHANK VAGARALI 0 minutes 22 seconds\nOK, alright, let'\''s get started. OK. So in today'\''s session, right, we are going to cover.\nSHASHANK VAGARALI 0 minutes 30 seconds\n3 two things, two mainly important topics let me share.\nSHASHANK VAGARALI 0 minutes 37 seconds\nRight. Can you see my screen?\n\nRishabh Kumar\n0 minutes 44 seconds0:44\nRishabh Kumar 0 minutes 44 seconds\nYes, as long.\nSV\n\nSHASHANK VAGARALI\n0 minutes 45 seconds0:45\nSHASHANK VAGARALI 0 minutes 45 seconds\nOK. So we are going to cover 2 important topics. One is content IBM container speed, then IBM code engine service. Then we are also going to look at the IBM cloud CLI. So why is it important and how to interact with the IBM cloud services using IBM cloud CL, right? So that is something which we are going to also see. Then we are going to see how. So everyone here is familiar with Docker images, right? So we are using prod man or Docker tool to create container images.\nSHASHANK VAGARALI 1 minute 15 seconds\nAnd we usually on cloud also on CPD, we do push these to the container registry, right. So the internals have been doing this. So they don'\''t have much information about this, but we'\''ll also see how to do that. And then once we have pushed the container image to a container registry, right, how to leverage that particular container image to deploy an application into port engine, that is also what we are going to see. All right, so these are the.\nSHASHANK VAGARALI 1 minute 41 seconds\nFive different things which we are going to cover in this particular session in the next 30 minutes. All right. OK. Now let'\''s jump into what is a container SD, right? So if I open this particular link, right. So it will look something like this.\nSHASHANK VAGARALI 1 minute 54 seconds\nOK so.\nSHASHANK VAGARALI 26 minutes 37 seconds\nCan you make sure configurable ports? OK, so if you look at this right, it gave an error right? So by default, whenever you'\''re trying to deploy right it will ask for a specific.\nSHASHANK VAGARALI 26 minutes 49 seconds\nLike for example, that'\''s really what it is failing but.\nSHASHANK VAGARALI 26 minutes 56 seconds\nSo so you need to give a specific port for this. By default it will use ADT port OK, but if you see this application uses a different port and that is the reason why it is not able to come out OK.\nSHASHANK VAGARALI 27 minutes 10 seconds\nThat place where we.\nSHASHANK VAGARALI 27 minutes 15 seconds\nWhen you show me.\nSHASHANK VAGARALI 27 minutes 28 seconds\nSo if you don'\''t see here right by default it is asking you'\''ll be listening at 8084, But if you look at this application details, right?\nSHASHANK VAGARALI 27 minutes 37 seconds\nIn this range. So this is running at port port 808501. So if your application is running on a different port that also you can specify here. So now instead of this I change it to this value and I say deploy now. So now it should go ahead and deploy properly without earlier it was stuck in deploying. Right now it should deploy properly.\nSHASHANK VAGARALI 28 minutes 1 second\nBack to so if you see here this was the version where we had given port 8080. Now this is the new version where we gave Port 8080 right or 8501. So now if you see this is up and running immediately. OK now if I open this test application right.\nSHASHANK VAGARALI 28 minutes 26 seconds\nBut if you say if I click generate here OK that'\''s still giving I am maybe like a P/E key is expired or something. But still you can see right so immediately we were able to deploy that all right now how to change the version of this particular deployment. Again I go back to configurations, my edges where is my image or yeah I changed configure here.\nSHASHANK VAGARALI 28 minutes 59 seconds\nSo if you see the tag here or that should be 02 here, it changes to 02. I say I said it like.\nSHASHANK VAGARALI 29 minutes 10 seconds\nAnd it should get deployed pretty quickly.\nSHASHANK VAGARALI 29 minutes 14 seconds\nSo if you'\''re seeing about a minute or two, it gets deployed and immediately you will get your application up and running. So in here it got deployed right? So now if I open this URL you should be able to see the new app getting deployed here. OK, adding a new change. So earlier what we saw is with version 1.1101 we had only this. Now with the word version 102 you have this. OK, so it is this simple to deploy an application in code engine and make it available in production.\nSHASHANK VAGARALI 29 minutes 42 seconds\nThank you. OK, so now I think this is what I wanted to showcase as part of this demo or this part of the session. So what we covered is we covered what is IBM container stream. We saw what is IBM code engine, we saw how IBM Cloud CLI can be used, we boost any minutes to container SP and we also deployed an application to port and we also saw how to update that. All right.\nSHASHANK VAGARALI 30 minutes 8 seconds\nOK. Questions.\nB\n\nBharat .\n30 minutes 14 seconds30:14\nBharat . 30 minutes 14 seconds\nWhere do we see this locks for those things?\nSV\nSHASHANK VAGARALI\n30 minutes 17 seconds30:17\nSHASHANK VAGARALI 30 minutes 17 seconds\nOK, very good question. OK. So let me come back here.\nSHASHANK VAGARALI 30 minutes 26 seconds\nAll right, so there was a question saying that where do we see the logs for this, right? So there are two ways to look at the logs for this, OK. So one is you can actually configure log DNA or the ABM cloud logs for your applications here, OK. So if you look at this right from the starting an application.\nSHASHANK VAGARALI 30 minutes 48 seconds\nI'\''m learning about, so you can say add monitoring here. So when you say add monitoring it will OK it requires some service authentication authorise no.\nSHASHANK VAGARALI 31 minutes 2 seconds\nOK, so you can either do this all right, so you can configure this part. This is the but this will require. Again you have to go all the others things to configure this part. Otherwise you can do. Simple thing is you can use the IBM cloud CLS.\nSHASHANK VAGARALI 31 minutes 21 seconds\nOr if you see IBM cloud C is the plugin for port engine OK and if you want to play around with the port engine applications, you can do this. OK now IBM.\nSHASHANK VAGARALI 31 minutes 34 seconds\nSo see then when I say app.\nSHASHANK VAGARALI 31 minutes 42 seconds\nI say list. OK, so in this will list me all the IBM cloud engine applications in that particular project. OK now I think we saw three, right, we have 3. So this is the application which we deployed right. And if you want to look at the logs for this, you can actually do this instead of this. So it logs hyphen A and give this. So you should be able to see the logs for us. OK.\nSHASHANK VAGARALI 32 minutes 7 seconds\nSo this is how you can see the logs for that particular application.\nSHASHANK VAGARALI 32 minutes 15 seconds\nClear.\nSHASHANK VAGARALI 32 minutes 17 seconds\nBasically, you'\''ll have to use the IP in cloud CLI to connect to that. Using this IBM Cloud C plugin to get the logs all right.\nSHASHANK VAGARALI 32 minutes 32 seconds\nBetter clear.\nSHASHANK VAGARALI 32 minutes 36 seconds\nOK. All right. Any other questions?\nGJ\nGagan J\n32 minutes 41 seconds32:41\nGagan J 32 minutes 41 seconds\nCan we create this using the CLI and any YAML file shishan?\nSV\nSHASHANK VAGARALI\n32 minutes 47 seconds32:47\nSHASHANK VAGARALI 32 minutes 47 seconds\nCome again your question?\nGJ\nGagan J\n32 minutes 50 seconds32:50\nGagan J 32 minutes 50 seconds\nThen we create the application using ACLA or.\nSV\nSHASHANK VAGARALI\n32 minutes 54 seconds32:54\nSHASHANK VAGARALI 32 minutes 54 seconds\nYeah you can. So if you look at this, right, so you can say I made me a little cloud.\nSHASHANK VAGARALI 33 minutes 1 second\nScene.\nSHASHANK VAGARALI 33 minutes 3 seconds\nThat'\''s that'\''s app and say create right.\nSHASHANK VAGARALI 33 minutes 10 seconds\nOK, so this is the creation one. So in this case this is the command which you'\''ll have to give. And there are a bunch of options here. OK? Like you can give IBM cloud app create and you need to give a name and you need to give the minimal things like you can give environment variables, CPU, memory environment for secret image, Max scale all those things. So whatever we saw in this UI right like we are trying to create an application we need to give it from.\nSHASHANK VAGARALI 33 minutes 39 seconds\nYeah, CLA. OK, so you can do it almost everything. What you can do from the UI. In fact, you can do much, much more things from this CLI. OK.\nGJ\nGagan J\n33 minutes 50 seconds33:50\nGagan J 33 minutes 50 seconds\nThe other comment, right? So this will be able to pass the parameters and all that is it in file like YAML and.\nGagan J 33 minutes 57 seconds\nOption do we have iphonef option? Yeah. Correct. Kind of. These are other command, right?\nGagan J 34 minutes 2 seconds\nWhatever you put that word, so can we. The the file is.\nSV\nSHASHANK VAGARALI\n34 minutes 2 seconds34:02\nSHASHANK VAGARALI 34 minutes 2 seconds\nOK. No, no, no. So so you are asking like you want to create like something like that for sure. So that is not there. So that is an abstraction layer which they provide here, right. So you don'\''t have to worry about all that. So here it is just about creating an image and pushing it, OK rest of the things, the container, the code engine takes care. So you don'\''t have to create a SVC or a deployment, nothing.\nSHASHANK VAGARALI 34 minutes 28 seconds\nYou just provide the the abstraction layer with what how many parts you want that are like say I'\''ll show you if you want to increase the number of instances, right, say I go to configurations and say resource and scaling. Now minimum number of instances 0 right? So why it is 0 is because if this application is not getting used right there will be no instances running when the first request comes it will bring up a part. But you can say like minimum number of instances running. You can increase it to say two or three. OK.\nSHASHANK VAGARALI 34 minutes 57 seconds\nWhen you say two or three or you will always have a minimum number of instances which are running here will be 3 here. OK, you see there are three boards which will come up.\nSHASHANK VAGARALI 35 minutes 7 seconds\nGot it. So it is as simple as that. You don'\''t have to interact with any cube API, nothing. All that is abstracted out.\nSHASHANK VAGARALI 35 minutes 17 seconds\nOK.\nSHASHANK VAGARALI 35 minutes 23 seconds\nWhen it is called serverless mainly because of this only because there is no server which you need to manage, it is just from the UI and the interface where you can increase or they change the configuration of your application. OK.\nSHASHANK VAGARALI 35 minutes 39 seconds\nIf that answers your question.\nSHASHANK VAGARALI 35 minutes 44 seconds\nOK. All right. Any other questions?\nSHASHANK VAGARALI 35 minutes 53 seconds\nOK. If not, we can conclude the session for today.\nOutput: Shashank Vagarali\n\nYesterday’s Work: N/A (facilitator)\n\nToday’s Plan: Cover IBM Container Registry, IBM Code Engine, IBM Cloud CLI, and deploying applications to Code Engine\n\nBlockers: None\n\nBharat\n\nYesterday’s Work: N/A\n\nToday’s Plan: Asked about viewing logs for deployed applications\n\nBlockers: None\n\nGagan J\n\nYesterday’s Work: N/A\n\nToday’s Plan: Inquired about creating applications using CLI and YAML files\n\nBlockers: None\n\n\nInput: [00:00] Emma: Good morning, team! Let’s do a quick round. Starting \nwith what you did yesterday, what you’re doing today, and blockers if any.\nMike, you want to start?\n[00:08] Mike: Sure! Yesterday, I finished integrating the new login API. \nToday, I’m working on fixing the token refresh logic. No blockers so far.\n[00:18] Sophia: I tested Mike’s API yesterday and found a small bug with \nexpired tokens. I’ll help him today to fix that.\n[00:25] Mike: Thanks, Sophia. That’ll speed things up.\n[00:28] Raj: I wrapped up the UI tweaks for the dashboard yesterday. \nToday, I’m starting on the notifications module.\n[00:35] Julia: Notifications? That reminds me, I’m blocked on the \nnotification backend because the event stream from Raj’s module isn’t \nready yet.\n[00:42] Raj: Ah, right. I underestimated how long the event stream setup \nwould take. I’ll prioritize that.\n[00:47] Ethan: Yesterday, I updated the payment gateway integration. \nToday, I’m testing refunds. No blockers.\n[00:53] Olivia: I’m working with Ethan on refunds today. I found some \nedge cases around partial refunds that need attention.\n[01:00] Ethan: Good catch, Olivia. Let’s sync after this.\n[01:04] Liam: I finalized the unit tests for the analytics service. Today, I’ll \nstart on the integration tests.\n[01:10] Ava: Liam, are you waiting on the latest data models from Grace? \nBecause I think those were delayed.\n[01:15] Grace: Yeah, sorry, team. I’m still finalizing the schema updates. \nGot caught up with a client call yesterday. I’ll send the updates by noon.\n[01:22] Liam: Okay, I’ll hold off on integration tests till then.\n[01:26] Noah: I deployed the staging environment fixes last night. Today, \nI’m monitoring logs for errors.\n[01:32] Mia: Are you seeing anything related to the session timeout bug? \nBecause that’s still impacting me.\n[01:37] Noah: Not yet, but I’ll check the logs specifically for that.\n[01:40] Charlotte: Yesterday, I updated the onboarding docs. I’m planning\nto start working on the user feedback form today.\n[01:46] James: Heads up — I’m still blocked on Charlotte’s docs to \nfinalize my training module.\n[01:51] Charlotte: Got it, James. I’ll try to wrap that up ASAP.\n[01:54] Benjamin: I updated the caching layer and pushed changes \nyesterday. Today, I’m debugging some cache invalidation issues.\n[02:01] Emma: Benjamin, does that affect the load testing you’re doing, \nDave?\n[02:04] Dave: Yeah, I’m seeing inconsistent results. Could be related.\n[02:07] Benjamin: Thanks for flagging, Dave. I’ll loop you in after this.\n[02:11] Emma: Okay, to recap — blockers are the event stream (Raj), \ndata models (Grace), session timeout logs (Noah), and docs for training \n(Charlotte). Everyone else seems good. Anything else?\n[02:23] Sophia: Just a quick note — I’m going to be offline after 2 PM for \na doctor’s appointment.\n[02:27] Emma: Thanks for the heads up, Sophia. Alright, team, let’s have \na productive day!\nOutput: Emma\nYesterday’s Work:— (Facilitated meeting)\nToday’s plan: Keep track of blockers and progress\nBlockers: None mentioned\nMike\nYesterday’s Work: Wrapped up login API integration\nToday’s plan: Fix token refresh logic (collaborate with Sophia)\nBlockers: Token refresh bug (discovered after Sophia’s tests)\nSophia\nYesterday’s Work:Tested login API, found expired token bug\nToday’s plan: Help Mike fix token issue\nBlockers: Doctor’s appointment this afternoon (availability)\nRaj\nYesterday’s Work:Tweaked dashboard UI\nToday’s plan: Prioritize setting up event stream\nBlockers: Delay in event stream setup (underestimated time)\nJulia\nYesterday’s Work: Waiting on Raj’s event stream for notification backend\nToday’s plan:Continue notification backend once stream ready\nBlockers: Blocked by Raj’s incomplete event stream\nEthan\nYesterday’s Work: Updated payment gateway code\nToday’s plan: Investigate refund edge cases (found by Olivia)\nBlockers: None mentioned\nOlivia\nYesterday’s Work:Tested refunds, found odd behavior in partial refunds\nToday’s plan: Help Ethan debug refund bugs\nBlockers: None mentioned\nLiam\nYesterday’s Work: Wrote unit tests for analytics\nToday’s plan:Waiting for Grace’s updated data models to start integration tests\nBlockers: Waiting on Grace’s data models\nAva\nYesterday’s Work:— (Not explicitly stated)\nToday’s plan: — (Not explicitly stated)\nBlockers: None mentioned\nGrace\nYesterday’s Work: Got stuck with client call, couldn’t update schema\nToday’s plan:Finalize data schema updates by noon\nBlockers: Delay due to client call\nNoah\nYesterday’s Work:Deployed fixes to staging environment\nToday’s plan:Monitor logs, investigate session timeout bug\nBlockers: Session timeout bug reported by Mia\nMia\nYesterday’s Work:: — (Not explicitly stated)\nToday’s plan:Report session timeout bug persists\nBlockers: Session timeout bug affecting work\nCharlotte\nYesterday’s Work: Updated onboarding documentation\nToday’s plan:Finish docs so James can proceed with training\nBlockers: Docs not finalized yet, blocking James\nJames\nYesterday’s Work: Waiting on onboarding docs\nToday’s plan:Waiting to receive finalized docs\nBlockers: Blocked by Charlotte’s docs\nBenjamin\nYesterday’s Work:Updated caching system\nToday’s plan:Debug cache invalidation bug\nBlockers: Cache invalidation bug causing issues\nDave\nYesterday’s Work: — (Not explicitly stated)\nToday’s plan: Doing load testing, noticed suspicious results\nBlockers: Possible cache issues related to Benjamin’s bug\n\nInput: [9:00 AM – Zoom Call Begins]\n\nAlex:\nMorning everyone! Let’s get started. I think we’ll keep it casual today. Let’s begin with whoever wants to go first?\n\nPriya:\nI can start. Yesterday I finished integrating the payment gateway. But there'\''s this weird issue with the callback not triggering consistently. I'\''m still debugging that.\n\nRamesh:\nWait, is this the Razorpay one or Stripe?\n\nPriya:\nStripe. We moved to that last sprint, remember?\n\nJordan:\nOh yeah, I had a similar issue before. Sometimes the test environment doesn’t simulate the webhook properly. Try sending manual events via the dashboard.\n\nPriya:\nAh, good idea! I didn'\''t try manual triggers. I’ll check that.\n\nAlex:\nNice. That might unblock Priya then.\n\nMeena:\nI was actually blocked on API rate limits yesterday. The logs were showing 429s when I hit the metrics endpoint.\n\nTanvi:\nOh I fixed that last week. Did you try the throttling logic I added in the SDK?\n\nMeena:\nUhh… I might still be on the older branch 😬\n\nEveryone:\n—laughs—\n\nAlex:\nMeenaaa…\n\nMeena:\nOkay okay! I’ll pull the latest and re-test. Thanks Tanvi.\n\nRamesh:\nSo, I was pairing with Jordan yesterday on the auth bugs. We managed to patch the login redirect issue in Safari, but Chrome still sometimes logs people out unexpectedly.\n\nJordan:\nI think it’s a SameSite cookie thing. We didn’t test with third-party domains fully.\n\nTanvi:\nThat’s what I’m looking into today. I'\''m modifying the headers, so maybe I can take that part over?\n\nRamesh:\nYes, please! That’ll help me focus on the metrics visualization.\n\nPriya:\nOh btw, on that visualization – do we want to keep the heatmap format?\n\nAlex:\nLet’s take design discussions after. But quick answer: yes, unless there’s a strong reason to change.\n\nJordan:\nCool. Yesterday, I just wrapped the unit tests for the API gateway. Today I’m cleaning up some of the flaky Cypress tests. No blockers for now.\n\nMeena:\nJordan, can you send me your notes on mocking APIs with Cypress? I struggle with that every time.\n\nJordan:\nAbsolutely. I’ll drop a Notion link after this.\n\nAlex:\nThanks. I’ll go now — I spent most of yesterday helping QA on release prep. Today, I’m syncing with the design team on new onboarding flows.\n\nTanvi:\nAny timeline on the onboarding changes?\n\nAlex:\nMaybe end of week? Depends on how fast Figma reviews are done.\n\nTanvi:\nGot it.\n\nRamesh:\nOne thing — should we maybe assign someone to maintain the environment config files? They’re all over the place.\n\nPriya:\nYes please. I wasted 30 minutes yesterday fixing a mismatch in .env.staging.\n\nAlex:\nOkay, let’s assign that to Meena?\n\nMeena:\nCool, I’ll take care of it post-lunch.\n\nTanvi:\nOh, and for me — I finished the content moderation module yesterday. Today I’m moving to the analytics dashboard cleanup. No blockers unless the API schema changes again.\n\nRamesh:\nHaha, no changes from me. Promise.\n\nAlex:\nAlright! Anyone else?\n\nJordan:\nCan we start standups 10 minutes later next week? My VPN is slow in the mornings.\n\nPriya:\nSeconded 😅\n\nAlex:\nLet’s talk about that in the retro. Anything else?\n\n[Everyone shakes heads or says \"Nope\"]\n\nAlex:\nAlright, thanks everyone! Sync again tomorrow. I’ll send the summary.\n\n[9:20 AM – Call Ends]\nOutput: Priya\nYesterday’s work:\nIntegrated the Stripe payment gateway.\n\nToday’s plan:\nDebug Stripe webhook callback issue; test with manual event triggers based on Jordan’s suggestion.\n\nBlockers:\nWebhook callback not triggering consistently (possibly resolved with manual test).\n\n2. Ramesh\nYesterday’s work:\nPaired with Jordan to patch login redirect issue (Safari fix completed).\n\nToday’s plan:\nFocus on metrics visualization; hand off cookie bug to Tanvi.\n\nBlockers:\nChrome still logs users out unexpectedly (potential SameSite cookie issue, handed over to Tanvi).\n\n3. Jordan\nYesterday’s work:\nCompleted unit tests for API gateway.\n\nToday’s plan:\nClean up flaky Cypress tests; share Cypress mocking guide with Meena.\n\nBlockers:\nNone.\n\n4. Meena\nYesterday’s work:\nFaced API rate limits (429 errors); didn’t use updated SDK branch.\n\nToday’s plan:\nPull latest SDK, re-test; take ownership of cleaning up environment config files.\n\nBlockers:\nOutdated SDK branch (likely resolved after pulling latest code).\n\n5. Tanvi\nYesterday’s work:\nFinished content moderation module.\n\nToday’s plan:\nStart cleanup of analytics dashboard; take over SameSite cookie issue from Ramesh.\n\nBlockers:\nNone unless API schema changes again.\n\n6. Alex\nYesterday’s work:\nAssisted QA with release prep.\n\nToday’s plan:\nCoordinate with design team on onboarding flows; send out standup summary.\n\nBlockers:\nDependent on Figma review timelines.\nnnInput: ${formattedInput}\nOutput:`;

  const body = JSON.stringify({
    input: inputTemplate,
    parameters: {
      decoding_method: "greedy",
      max_new_tokens: 2000,
      min_new_tokens: 0,
      stop_sequences: [],
      repetition_penalty: 1,
    },
    model_id: "mistralai/mistral-large",
    project_id: "572cb865-b802-4c80-b5a7-27c89e8b022d",
    moderations: {
      hap: {
        input: {
          enabled: true,
          threshold: 0.5,
          mask: { remove_entity_value: true },
        },
        output: {
          enabled: true,
          threshold: 0.5,
          mask: { remove_entity_value: true },
        },
      },
      pii: {
        input: {
          enabled: true,
          threshold: 0.5,
          mask: { remove_entity_value: true },
        },
        output: {
          enabled: true,
          threshold: 0.5,
          mask: { remove_entity_value: true },
        },
      },
      granite_guardian: {
        input: { enabled: false, threshold: 1 },
      },
    },
  });

  try {
  

    const response = await fetch(url, {
      method: "POST",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
        Authorization: `Bearer ${accessToken}`,
      },
      body,
    });

    if (!response.ok) {
      const errorText = await response.text();
      return res.status(response.status).send({ error: errorText });
    }

    const data = await response.json();

    const output = data.results?.[0]?.
    generated_text || "No output generated";
    res.json({ output });
    console.log(data);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

app.listen(PORT, () => {
  console.log(`🚀 Server listening at http://localhost:${PORT}`);
});
